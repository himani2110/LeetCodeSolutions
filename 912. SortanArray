class Solution {

    public void conquer(int[] arr, int si, int mid, int ei){
        int mergedArr[] = new int[ei - si + 1];

        int idx1 = si;
        int idx2 = mid+1; 
        int x = 0;
        while(idx1 <= mid && idx2 <= ei){
            if(arr[idx1] <= arr[idx2]){
                mergedArr[x++] = arr[idx1++];
            }
            else{
                mergedArr[x++] = arr[idx2++];
            }
        }
        while(idx1 <= mid){
             mergedArr[x++] = arr[idx1++];
        }
        while(idx2 <= ei){
            mergedArr[x++] = arr[idx2++];
        }

        for(int i = 0, j = si; i < mergedArr.length ; i++, j++){
            arr[j] = mergedArr[i];
        }
    }

    public void divide(int[] nums, int si, int ei){
        if(si >= ei){
            return;
        }
        int mid = si + (ei - si)/2;
        divide(nums, si, mid);
        divide(nums, mid+1, ei);
        conquer(nums, si, mid, ei);
    }
    public int[] sortArray(int[] nums) {
        divide(nums, 0, nums.length-1);
        return nums;
    }
}
